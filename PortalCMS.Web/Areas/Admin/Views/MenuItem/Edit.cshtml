@model PortalCMS.Web.Areas.Admin.ViewModels.MenuItem.EditViewModel
@{
    Layout = "";
}

@Styles.Render("~/Plugins/FontAwesome/Styles/Picker")
@Scripts.Render("~/Plugins/FontAwesome/Scripts")

<script type="text/javascript">
    $('.icp-auto').iconpicker();
</script>

@using (Html.BeginForm("Edit", "MenuItem", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.MenuId)
    @Html.HiddenFor(x => x.MenuItemId)

    @Html.ValidationMessage("LinkText")
    <div class="control-group">
        @Html.LabelFor(x => x.LinkText)
        @Html.TextBoxFor(x => x.LinkText, new { placeholder = "Link Text" })
    </div>

    @Html.ValidationMessage("LinkIcon")
    <div class="control-group">
        @Html.LabelFor(x => x.LinkIcon)
        <div class="input-group">
            <input id="LinkIcon" name="LinkIcon" data-placement="bottomRight" class="form-control icp icp-auto" value="@Model.LinkIcon" type="text" />
            <span class="input-group-addon"></span>
        </div>
    </div>

    @Html.ValidationMessage("LinkURL")
    <div class="control-group">
        @Html.LabelFor(x => x.LinkURL)
        @Html.TextBoxFor(x => x.LinkURL, new { placeholder = "Link Address (URL)" })
    </div>

    <br />

    <div class="alert alert-warning" role="alert">A user must have at least one selected role to see this link. Show to all by choosing no roles.</div>
        <div class="control-group control-textarea float-container">
            @Html.LabelFor(x => x.SelectedRoleList)
            @Html.ListBoxFor(m => m.SelectedRoleList, Model.RoleList.Select(r => new SelectListItem { Text = r.Name, Value = r.Name.ToString(), Selected = Model.SelectedRoleList != null && Model.SelectedRoleList.Contains(r.Name) }))
        </div>

        <div class="footer">
            <a href="@Model.LinkURL" class="btn" style="margin-right: 20px;"><span class="fa fa-globe"></span><span class="hidden-xs">Visit Link</span></a>
            <button class="btn primary"><span class="fa fa-floppy-o"></span><span class="hidden-xs">Save</span></button>
            <a href="@Url.Action("Delete", "MenuItem", new { menuItemId = Model.MenuItemId })" class="btn delete"><span class="fa fa-trash"></span><span class="hidden-xs">Delete</span></a>
            <button class="btn" data-dismiss="modal"><span class="fa fa-times"></span><span class="hidden-xs">Cancel</span></button>
        </div>
}