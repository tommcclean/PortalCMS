@model PortalCMS.Web.Areas.PageBuilder.ViewModels.Component.ContainerViewModel
@{
    Layout = "";
}

<script type="text/javascript">
    function Delete()
    {
        $('#@Model.ElementId').animateOut('flipOutX');

        var dataParams = { "pageSectionId": @Model.SectionId , "elementId": "@Model.ElementId", "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };

        $.ajax({
            data: dataParams,
            type: 'POST',
            cache: false,
            url: '/PageBuilder/Component/Delete',
            success: function (data) {
                if (data.State === false)
                {
                    alert("Error: The document has lost synchronisation. Reloading document...");
                    location.reload();
                }
            },
        });
    }

    function Clone()
    {
        var dataParams = { "pageSectionId": @Model.SectionId , "elementId": "@Model.ElementId", "componentStamp": new Date().valueOf(), "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };

        $.ajax({
            data: dataParams,
            type: 'POST',
            cache: false,
            url: '/PageBuilder/Component/Clone',
            success: function (data) {
                if (data.State === false)
                {
                    alert("Error: The document has lost synchronisation. Reloading document...");
                    location.reload();
                }
                else
                {
                    PageBuilder.Helpers.ReloadSection(@Model.SectionId);
                }
            },
        });
    }
</script>

@using (Html.BeginForm("EditContainer", "Component", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.SectionId)
    @Html.HiddenFor(x => x.ElementId)

    <div class="alert alert-warning" role="alert">Removing this container will also remove all content inside it.</div>

    <div class="control-group">
        @Html.LabelFor(x => x.Animation)
        @Html.EnumDropDownListFor(m => m.Animation, new { @class = "form-control" })
    </div>

    <div class="footer">
        <button class="btn primary">Save</button>
        <a onclick="Clone()" data-dismiss="modal" class="btn">Clone</a>
        <a onclick="Delete()" data-dismiss="modal" class="btn delete">Delete</a>
        <button class="btn" data-dismiss="modal">Cancel</button>
    </div>
}